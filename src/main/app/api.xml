<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">


	
    <http:listener-config name="api-httpListenerConfig" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    <apikit:config name="api-config" raml="api.raml" consoleEnabled="false" doc:name="Router"/>
    <db:mysql-config name="MySQL_Configuration" host="localhost" port="3306" user="dpayne-mac" password="1760" database="mac_users" doc:name="MySQL Configuration"/>
    <flow name="api-main">
        <http:listener config-ref="api-httpListenerConfig" path="/api/*" doc:name="HTTP"/>
        <apikit:router config-ref="api-config" doc:name="APIkit Router"/>
        <exception-strategy ref="api-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="api-console">
        <http:listener config-ref="api-httpListenerConfig" path="/console/*" doc:name="HTTP"/>
        <apikit:console config-ref="api-config" doc:name="APIkit Console"/>
    </flow>
    <flow name="delete:/users/{userId}:api-config">
        <set-payload value="{ &quot;message&quot;: &quot;The user was DELETED successfuly&quot; }" doc:name="Set Payload"/>

    </flow>
    <flow name="get:/users:api-config">
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[select userid, firstname, lastname, middlename, department, hiredate, statusdate, jobtitle from mac_users.users]]></db:parameterized-query>
        </db:select>
        <dw:transform-message metadata:id="0148ed53-617e-4426-8e81-85454322ada1" doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((payload01 , indexOfPayload01) -> {
	userId: payload01.userid as :string,
	firstName: payload01.firstname,
	lastName: payload01.lastname,
	middleName: payload01.middlename,
	department: payload01.department,
	hireDate: payload01.hiredate as :string,
	statusDate: payload01.statusdate as :string,
	jobTitle: payload01.jobtitle
})]]></dw:set-payload>
        </dw:transform-message>
        <set-payload value="#[payload]" metadata:id="930506b2-eca1-4bd9-9adb-b558f180952f" doc:name="Set Payload"/>
    </flow>
    <flow name="get:/users/{userId}:api-config">
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[select userid, firstname, lastname, middlename, department, hiredate, statusdate, jobtitle from mac_users.users where userid = #[message.inboundProperties.'http.uri.params'.userId]]]></db:parameterized-query>
        </db:select>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((payload01 , indexOfPayload01) -> {
	userId: payload01.userid as :string,
	firstName: payload01.firstname,
	lastName: payload01.lastname,
	middleName: payload01.middlename,
	department: payload01.department,
	hireDate: payload01.hiredate as :string,
	statusDate: payload01.statusdate as :string,
	jobTitle: payload01.jobtitle
})]]></dw:set-payload>
        </dw:transform-message>
        <set-payload value="#[payload]" metadata:id="930506b2-eca1-4bd9-9adb-b558f180952f" doc:name="Set Payload"/>
    </flow>
    <flow name="post:/users:application/xml:api-config">
        <set-payload value="#[payload]" metadata:id="82c27bb0-4986-4a41-87d8-6f015a547984" doc:name="Set Payload"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	firstname: payload.user.firstName,
	jobtitle: payload.user.jobTitle,
	middlename: payload.user.middleName,
	department: payload.user.department,
	hiredate: payload.user.hireDate,
	lastname: payload.user.lastName,
	statusdate: payload.user.statusDate
}]]></dw:set-payload>
        </dw:transform-message>
        <db:insert config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[INSERT INTO `mac_users`.`users`
(
`firstname`,
`lastname`,
`middlename`,
`department`,
`hiredate`,
`statusdate`,
`jobtitle`)
VALUES
(
#[payload.firstname],
#[payload.lastname],
#[payload.middlename],
#[payload.department],
#[payload.hiredate],
#[payload.statusdate],
#[payload.jobtitle]);]]></db:parameterized-query>
        </db:insert>

    </flow>
    <apikit:mapping-exception-strategy name="api-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>
